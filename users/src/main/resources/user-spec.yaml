openapi: 3.0.1
info:
  title: Usuarios
  description: Documentación para la API Usuarios
  version: 1.0.0
servers:
- url: http://localhost:8082
  description: Local Server
paths:
  /auth/signup:
    post:
      tags:
      - user-auth-controller
      summary: Registra un nuevo usuario
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserDto'
        required: true
      responses:
        "200":
          description: Registro Exitoso
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /auth/login:
    post:
      tags:
      - user-auth-controller
      summary: Autentica un usuario
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDto'
        required: true
      responses:
        "500":
          description: Error interno del servidor
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
        "200":
          description: Autenticación Exitosa
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
        "401":
          description: Credenciales Invalidas
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /users/me:
    get:
      tags:
      - user-controller
      summary: Obtener usuario autenticado
      description: Obtiene la información del usuario autenticado.
      operationId: autenticathedUser
      responses:
        "500":
          description: Error interno del servidor
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Sin autorización
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "200":
          description: Devuelve usuario autenticado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /users/all:
    get:
      tags:
      - user-controller
      summary: Obtener todos los usuarios
      description: Obtiene una lista de todos los usuarios registrados en el sistema.
      operationId: allUsers
      responses:
        "500":
          description: Error interno del servidor
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "401":
          description: Sin autorización
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "200":
          description: Lista de usuarios devuelta exitosamente
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
components:
  schemas:
    RegisterUserDto:
      required:
      - address
      - email
      - lastName
      - name
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        lastName:
          type: string
        address:
          type: string
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        lastName:
          type: string
        address:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        username:
          type: string
        accountNonLocked:
          type: boolean
        accountNonExpired:
          type: boolean
        credentialsNonExpired:
          type: boolean
    LoginUserDto:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: integer
          format: int64
