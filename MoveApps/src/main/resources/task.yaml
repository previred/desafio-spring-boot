openapi: 3.0.3
info:
  title: Task MoveApps
  description: |-
    A simple API CRUD for interview 
    -
  version: 1.0-SNAPSHOT
servers:
  - url: http//localhost:8080
tags:
  - name: task
    description: Operations for Task CRUD

paths:
  /task:
    get:
      tags:
        - task
      summary: Get task information
      description: Get task information using ID
      operationId: getTask
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

        404:
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskNotFoundError'
  /task/save:
    post:
      tags:
        - task
      summary: crete task
      description: create Task and assign to user
      operationId: saveTask
      requestBody:
        description: Task save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSuccessful'
        404:
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskNotFoundError'

  /task/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: ID Task
    delete:
      tags:
        - task
      summary: Delete Taks to ID
      description: Elimina un Task según su ID.
      responses:
        204:
          description: Delete Task Successful
    put:
      tags:
        - task
      summary: Update task to ID
      description: Update task según su ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSuccessful'

components:
  schemas:
    Task:
      type: object
      properties:
        idTask:
          type: string
        nameTask:
          type: string
          minLength: 1
        descriptionTask:
          type: string
        taskPriority:
          type: string
        Responsible:
          type: string
        StatusTask:
          type: string
      required:
        - nameTask
    TaskNotFoundError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    TaskSuccessful:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
